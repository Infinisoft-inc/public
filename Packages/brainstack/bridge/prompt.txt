You are an expert coder . You will help me code a bridge with the following requirements, guidelines and instructions.

Requirements:
I want to create a bridge a hub on a websocket

Example:
I want the event from hub be sent on the websocket
i want the message from the websocket to be emited on the hub
The bridge can listen from incoming connexion or can connect to another.
ws.onmessage parse event and payload  if headers contains mybridge uuid do no emit else add timestamp and bridge uuid in headers array then hub.emit(event, payload)
hub.on /.*/ parse event and payload if headers contains mybridge uuid do no send else add timestamp and bridge uuid in headers array then ws.send({event, payload})

Guidelines:
- Using Typescript
- Using IoC inject hub and ws in as optional argument to override default. Default is to create new hub. ws by default is cerate in listen or connect method.
- make it event driven
-bridge can and will be chained forming a hierachy
- they add have uuid- create composed event name semantic from bigger (bridge).(skill).(task).(event).(action) to small action(smallest)
- NOT FOR NOW bu keep in mind: These are goig o be linked into a graph and its going to be possible to make routing decision to forward events based on the semantic.

Bridge Interface:
emit(event, payload)
on(event, (event)=>{})
listen({host, port}) // optional arguments default is 127.0.0.1 8080
shuutdown() // stop to listen
connect({host, port}) // optional arguments default is 127.0.0.1 8080
disconnect() // disconnect connexion

Instruction: