import React from 'react';
import Chart from 'react-apexcharts';

class ChartApex extends React.Component {
  constructor(props) {
    super(props);
    
    var themeFont = (getComputedStyle(document.body).getPropertyValue('--bs-body-font-family')).trim();
    var themeFontWeight = (getComputedStyle(document.body).getPropertyValue('--bs-body-font-weight')).trim();
    var gray500 = (getComputedStyle(document.body).getPropertyValue('--bs-gray-500')).trim();
    var orange = (getComputedStyle(document.body).getPropertyValue('--bs-orange')).trim();
    
    // bar chart
    this.barChartOptions = {
      plotOptions: { bar: { horizontal: true, dataLabels: { position: 'top' } } },
      dataLabels: { enabled: true, offsetX: -6, style: { fontSize: '12px', colors: ['#ffffff'] } },
      colors: [orange, gray500],
      stroke: { show: false },
      xaxis: { 
        categories: [2013, 2014, 2015, 2016, 2017, 2018, 2019],
        axisBorder: { show: true, color: 'rgba(255, 255, 255, .25)', height: 1, width: '100%', offsetX: 0, offsetY: -1 },
        axisTicks: { show: true, borderType: 'solid', color: 'rgba(255, 255, 255, .25)', height: 6, offsetX: 0, offsetY: 0 },
        labels: { style: { colors: '#ffffff', fontSize: '12px', fontFamily: themeFont, fontWeight: themeFontWeight, cssClass: 'apexcharts-xaxis-label' } }
      },
      yaxis: { labels: { style: { colors: '#ffffff', fontSize: '12px', fontFamily: themeFont, fontWeight: themeFontWeight, cssClass: 'apexcharts-xaxis-label' } } },
      legend: { fontFamily: themeFont, labels: { colors: '#ffffff' } }
    };
    this.barChartData = [
      { data: [44, 55, 41, 64, 22, 43, 21] },
      { data: [53, 32, 33, 52, 13, 44, 32] }
    ];
  }
  
  render() {
    return (
      <div>
        <Chart type="bar" options={this.barChartOptions} series={this.barChartData} />
      </div>
    )
  }
}

export default ChartApex;