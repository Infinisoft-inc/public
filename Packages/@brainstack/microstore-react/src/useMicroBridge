import { useEffect } from "react";
import { useOn } from "./useMicroStore";
import { WebSocket } from "ws";

const useMicrobridge = (store, ws, url) => {
  let heartbeat;

  const stop_heartbeat = () => {
    clearInterval(heartbeat);
  };

  const start_heartbeat = () => {
    clearInterval(heartbeat);
    heartbeat = setInterval(() => {
      if (ws.readyState === ws.CLOSED) {
        ws = new WebSocket(url);
      }

      if (ws.readyState === ws.OPEN) {
        stop_heartbeat();
      }
    }, 5000);
  };

  useOn(/\*/, (e) => {
    try {
      ws.send(JSON.stringify(e));
    } catch (e) {
      console.error(e);
    }
  });

  useEffect(() => {
    ws.onmessage = (e) => {
      const { eventName, payload } = JSON.parse(e);
      store.emit(eventName, payload);
    };

    ws.onopen = (e) => {
      store.emit("microstore.bridge.online");
      stop_heartbeat();
    };

    ws.onclose = (e) => {
      store.emit("microstore.bridge.offline");
      start_heartbeat();
    };

    ws.onerror = (e) => {
      store.emit("microstore.bridge.offline");
      start_heartbeat();
    };

    return () => {
      if (ws.readyState === ws.OPEN) {
        ws.close();
      }
      let ws = null;
      stop_heartbeat();
    };
  }, []);
};
